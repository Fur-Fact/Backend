openapi: 3.0.0
info:
  title: 펫 등록 API
  version: 1.0.0
  description: 펫 등록을 위한 API
servers:
  - url: http://localhost:3000
paths:
  /api/v1/pets:
    post:
      summary: 새로운 펫 등록(로그인 필요)
      tags:
        - Pets
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: 펫 이미지 파일
                name:
                  type: string
                  description: 펫 이름
                age:
                  type: integer
                  description: 펫 나이
                gender:
                  type: string
                  description: 펫 성별
                  default: "male"
                species:
                  type: string
                  description: 펫 종
                weight:
                  type: number
                  description: 펫 무게
                feed:
                  type: string
                  description: 펫 먹이 정보
      responses:
        200:
          description: 펫 등록 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                  message:
                    type: string
        400:
          description: 필수 필드 누락
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                  message:
                    type: string
        500:
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                  message:
                    type: string

  /api/v1/pets/{petId}:
    get:
      summary: 특정 펫 정보 조회(로그인 필요)
      tags:
        - Pets
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: petId
          required: true
          description: 조회할 펫의 고유 ID
          schema:
            type: string
      responses:
        200:
          description: 펫 정보 조회 성공
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
        404:
          description: 펫을 찾을 수 없음
        500:
          description: 서버 오류
    put:
      summary: 펫 정보 수정(로그인 필요)
      tags:
        - Pets
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: petId
          required: true
          description: 수정할 펫의 고유 ID
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: 펫 이미지 파일 (선택적)
                name:
                  type: string
                  description: 펫 이름 (선택적)
                age:
                  type: integer
                  description: 펫 나이 (선택적)
                gender:
                  type: string
                  description: 펫 성별 (선택적)
                  default: "male"
                species:
                  type: string
                  description: 펫 종 (선택적)
                weight:
                  type: number
                  description: 펫 무게 (선택적)
                feed:
                  type: string
                  description: 펫 먹이 정보 (선택적)
      responses:
        200:
          description: 펫 정보 수정 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        400:
          description: 잘못된 요청 데이터
        404:
          description: 펫을 찾을 수 없음
        500:
          description: 서버 오류

    delete:
      summary: 펫 정보 삭제(로그인 필요)
      tags:
        - Pets
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: petId
          required: true
          description: 삭제할 펫의 고유 ID
          schema:
            type: string
      responses:
        200:
          description: 펫 정보 삭제 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        404:
          description: 펫을 찾을 수 없음
        500:
          description: 서버 오류
          
  /api/v1/pets/list:
    get:
      summary: 모든 펫 정보 조회(로그인 필요)
      tags:
        - Pets
      security:
        - bearerAuth: []
      responses:
        200:
          description: 펫 정보 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                  pets:
                    type: array
                    items:
                      $ref: "#/components/schemas/Pet"
        404:
          description: 펫을 찾을 수 없음
        500:
          description: 서버 오류

components:
  schemas:
    Pet:
      type: object
      properties:
        id:
          type: string
          description: 펫의 고유 ID
        name:
          type: string
          description: 펫 이름
        age:
          type: integer
          description: 펫 나이
        gender:
          type: string
          description: 펫 성별
        species:
          type: string
          description: 펫 종
        weight:
          type: number
          description: 펫 무게
        feed:
          type: string
          description: 펫 먹이 정보
        image:
          type: string
          description: 펫 이미지 URL
        createdAt:
          type: string
          format: date-time
          description: 생성일자
        updatedAt:
          type: string
          format: date-time
          description: 수정일자

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT